name: Build Blender Extension
description: Action to automatically build the Blender Extension and store the resulting .zip artifact.
author: DShot92, Daniele Stochino

branding:
  icon: box
  color: blue

runs:
  using: composite

  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Cache Python packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install required Python packages
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install requests toml-cli toml beautifulsoup4

    - name: Create scripts directory
      shell: bash
      run: mkdir -p $HOME/scripts

    - name: Download get_latest_blender.py
      shell: bash
      run: wget -O $HOME/scripts/get_latest_blender.py https://raw.githubusercontent.com/dshot92/build-blender-extension/main/get_latest_blender.py

    - name: Run get_latest_blender.py and capture output
      id: get_blender_url
      shell: bash
      run: |
        echo "BLENDER_URL=$(python $HOME/scripts/get_latest_blender.py)" >> $GITHUB_ENV

    - name: Download Blender
      shell: bash
      run: wget -O $HOME/blender.tar.xz "${{ env.BLENDER_URL }}"

    - name: Create Blender directories
      shell: bash
      run: |
        mkdir -p $HOME/.local/bin
        mkdir -p $HOME/blender

    - name: Extract Blender
      shell: bash
      run: tar -xf $HOME/blender.tar.xz -C $HOME/blender --strip-components=1

    - name: Create Blender symlink
      shell: bash
      run: |
        ln -s $HOME/blender/blender $HOME/.local/bin/blender
        echo "BLENDER_PATH=$HOME/.local/bin/blender" >> $GITHUB_ENV

    - name: Extract version from blender_manifest.toml
      id: extract_version
      shell: bash
      run: |
        echo "EXT_VERSION=$(python -c "import toml; print(toml.load('./blender_manifest.toml')['version'])")" >> $GITHUB_ENV
        echo "ZIP_FILE_PATH=$HOME/${{ github.event.repository.name }}-${{ env.EXT_VERSION }}.zip" >> $GITHUB_ENV

    - name: Build extension
      shell: bash
      run: ${{ env.BLENDER_PATH }} --command extension build --output-filepath="${{ env.ZIP_FILE_PATH }}"

    - name: Validate extension
      shell: bash
      run: ${{ env.BLENDER_PATH }} --command extension validate "${{ env.ZIP_FILE_PATH }}"

    - name: Unzip the file
      shell: bash
      run: |
        unzip "${{ env.ZIP_FILE_PATH }}" -d "/home/runner/${{ github.event.repository.name }}-${{ env.EXT_VERSION }}"

    - name: List directory contents
      shell: bash
      run: ls -al /home/runner/${{ github.event.repository.name }}-${{ env.EXT_VERSION }}

    - name: Archive artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.repository.name }}-${{ env.EXT_VERSION }}
        path: /home/runner/${{ github.event.repository.name }}-${{ env.EXT_VERSION }}
        if-no-files-found: warn

