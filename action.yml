name: 'Build Blender Extension'
description: 'Action to automatically build the Blender Extension and store the resulting .zip artifact.'
author: 'DShot92, Daniele Stochino'

branding:
  icon: 'box'
  color: 'blue'

runs:
  using: 'composite'

  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install required Python packages
      shell: bash
      run: pip install requests toml-cli toml beautifulsoup4

    - name: List files in directory
      shell: bash
      run: ls -R

    - name: Get latest daily Blender build URL
      run: |
        blender_url=$(python - <<'EOF'
import re
from urllib import request
from bs4 import BeautifulSoup

def get_latest_daily_build_url():
    try:
        resp = request.urlopen("https://builder.blender.org/download/daily/")
        soup = BeautifulSoup(resp, 'html.parser')

        # Find all <a> tags with href matching the specific pattern
        releases = soup.find_all('a', href=re.compile(
            r"https://cdn\.builder\.blender\.org/download/daily/blender-\d+\.\d+\.\d+-\w+\+\w+\.\w+-linux\.x86_64-release\.tar\.xz"))

        # Filter out URLs containing '.sha256'
        releases = [release['href']
                    for release in releases if '.sha256' not in release['href']]

        # Return only the latest version (assuming list is sorted in descending order by version)
        if releases:
            return releases[0]
        else:
            return None

    except Exception as e:
        print(f"Error fetching or parsing data: {e}")
        return None

download_url = get_latest_daily_build_url()
if download_url:
    print(download_url)
else:
    print("Failed to find the latest daily Blender build download URL.")
EOF
)
      echo "BLENDER_URL=$blender_url" >> $GITHUB_ENV
      echo $blender_url > blender_url.txt  # Optionally, save to a file for reference


    - name: Download and extract Blender
      shell: bash
      run: |
        wget -O /home/runner/blender.tar.xz ${{ env.BLENDER_URL }}
        mkdir -p /home/runner/.local/bin /home/runner/blender
        tar -xf /home/runner/blender.tar.xz -C /home/runner/blender --strip-components=1
        ln -s /home/runner/blender/blender /home/runner/.local/bin/blender
    
    - name: remove blender_url.txt
      shell: bash
      run: rm blender_url.txt

    - name: Extract version from blender_manifest.toml
      shell: bash
      id: extract_version
      run: |
        version=$(python -c "import toml; print(toml.load('./blender_manifest.toml')['version'])")
        echo "Version: $version"
        echo "version=$version" >> $GITHUB_ENV  # Store version in environment variable
        echo "ZIP_FILE_PATH=/home/runner/${{ github.event.repository.name }}-${version}.zip" >> $GITHUB_ENV  # Store zip file path in environment variable

    - name: Build extension and capture zip filename
      shell: bash
      run: |
        blender --command extension build --output-filepath=${{ env.ZIP_FILE_PATH }}

    - name: Unzip the file
      shell: bash
      run: |
        unzip ${{ env.ZIP_FILE_PATH }} -d /home/runner/${{ github.event.repository.name }}-${{ env.version }}

    - name: Archive artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.repository.name }}-${{ env.version }}
        path: /home/runner/${{ github.event.repository.name }}-${{ env.version }}
